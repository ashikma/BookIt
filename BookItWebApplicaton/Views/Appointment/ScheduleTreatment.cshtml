@using BookIt
@using System.Web
@model string[,]
@{
   
    string aviability = "";
    for (int i = 0; i < Model.GetLength(0); i++)
    {
        aviability += "[";
        for (int j = 0; j < Model.GetLength(1); j++)
        {
            if (Model[i, j] != "")
            {
                aviability += "'" + Model[i, j] + "'";
                if (j != Model.GetLength(1) - 1)
                {
                    aviability += ",";
                }
            }
        }
        aviability += "]";
        if (i != Model.GetLength(0) - 1)
        {
            aviability += ",";
        }
    }
    //string decoded = HttpUtility.HtmlDecode(aviability);
}
<div id="picker"></div>

<div>
    <p>Selected date: <span id="selected-date"></span></p>
    <p>Selected time: <span id="selected-time"></span></p>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
<script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
<script type="text/javascript">

         function setApoiment (treatmentID , userID,date,time,duration )
         {

                let uri = `http://localhost:5092/Appointment/ScheduleTreatment/?treatmentID=${treatmentID}&userID=${userID}&date=${date}&time=${time}&duration=${duration}`;
                alert(uri);
                $.ajax({
                    url: uri,
                    method: "GET",
                    dataType: "html",
                    beforeSend: function () {
                        // let loader = "<div class=loader>" +
                        //     "<img src='content/images/loader.gif' />" +
                        //     "</div>";
                        // $("#main").html(loader);

                    },
                    error: function () {
                        // your code here;
                    },
                    success: function (data) {
                        // setTimeout(function () {
                        //     $("#main").html(data);
                        // }, 2000);

                    },
                    complete: function () {
                        // your code here;
                    }
                });
            }


       (function ($) {
            Date.prototype.addDays = function (days) {
            var date = new Date(this.valueOf());
            date.setDate(date.getDate() + days);
            return date;
        }

        $.fn.markyourcalendar = function (opts) {
            var prevHtml = `
                <div id="myc-prev-week">
                    <
                </div>
            `;
            var nextHtml = `<div id="myc-next-week">></div>`;
            var defaults = {
                availability: [[], [], [], [], [], [], []], // listahan ng mga oras na pwedeng piliin
                isMultiple: false,
                months: ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'],
                prevHtml: prevHtml,
                nextHtml: nextHtml,
                selectedDates: [],
                startDate: new Date(),
                weekdays: ['sun', 'mon', 'tue', 'wed', 'thurs', 'fri', 'sat'],
            };
            var settings = $.extend({}, defaults, opts);
            var html = ``;

            var onClick = settings.onClick;
            var onClickNavigator = settings.onClickNavigator;
            var instance = this;

            // kuhanin ang buwan
            this.getMonthName = function (idx) {
                return settings.months[idx];
            };

            var formatDate = function (d) {
                var date = '' + d.getDate();
                var month = '' + (d.getMonth() + 1);
                var year = d.getFullYear();
                if (date.length < 2) {
                    date = '0' + date;
                }
                if (month.length < 2) {
                    month = '0' + month;
                }
                alert(date + '/' + month + '/' + year);
                return date + '/' + month + '/' + year;
            };

            // Eto ang controller para lumipat ng linggo
            // Controller to change
            this.getNavControl = function () {
                var previousWeekHtml = `<div id="myc-prev-week-container">` + settings.prevHtml + `</div>`;
                var nextWeekHtml = `<div id="myc-prev-week-container">` + settings.nextHtml + `</div>`;
                var monthYearHtml = `
                    <div id="myc-current-month-year-container">
                        ` + this.getMonthName(settings.startDate.getMonth()) + ' ' + settings.startDate.getFullYear() + `
                    </div>
                `;

                var navHtml = `
                    <div id="myc-nav-container">
                        ` + previousWeekHtml + `
                        ` + monthYearHtml + `
                        ` + nextWeekHtml + `
                        <div style="clear:both;"></div>
                    </div>
                `;
                return navHtml;
            };

            // kuhanin at ipakita ang mga araw
            this.getDatesHeader = function () {
                var tmp = ``;
                for (i = 0; i < 7; i++) {
                    var d = settings.startDate.addDays(i);
                    tmp += `
                        <div class="myc-date-header" id="myc-date-header-` + i + `">
                            <div class="myc-date-number">` + d.getDate() + `</div>
                            <div class="myc-date-display">` + settings.weekdays[d.getDay()] + `</div>
                        </div>
                    `;
                }
                var ret = `<div id="myc-dates-container">` + tmp + `</div>`;
                return ret;
            }

            // kuhanin ang mga pwedeng oras sa bawat araw ng kasalukuyang linggo
            this.getAvailableTimes = function () {
                alert("23");
                var tmp = ``;
                for (i = 0; i < 7; i++) {
                    var tmpAvailTimes = ``;
                    $.each(settings.availability[i], function () {
                        tmpAvailTimes += `
                                    <a href="javascript:;" class="myc-available-time"
                                    data-treatmentid=@ViewBag.TreatmentID.ToString()
                                    data-userid=@ViewBag.UserID.ToString()
                                    data-duration=@ViewBag.Duration.ToString()
                                    data-time="` + this + `" data-date="` + formatDate(settings.startDate.addDays(i)) + `">
                                ` + this + `
                            </a>
                        `;
                    });
                    tmp += `
                        <div class="myc-day-time-container" id="myc-day-time-container-` + i + `">
                            ` + tmpAvailTimes + `
                            <div style="clear:both;"></div>
                        </div>
                    `;
                }
                return tmp
            }

            // i-set ang mga oras na pwedeng ilaan
            this.setAvailability = function (arr) {
                settings.availability = arr;
                render();
            }

            // clear
            this.clearAvailability = function () {
                settings.availability = [[], [], [], [], [], [], []];
            }

            // pag napindot ang nakaraang linggo
            this.on('click', '#myc-prev-week', function () {
                settings.startDate = settings.startDate.addDays(-7);
                instance.clearAvailability();
                render(instance);

                if ($.isFunction(onClickNavigator)) {
                    onClickNavigator.call(this, ...arguments, instance);
                }
            });

            // pag napindot ang susunod na linggo
            this.on('click', '#myc-next-week', function () {
                settings.startDate = settings.startDate.addDays(7);
                instance.clearAvailability();
                render(instance);

                if ($.isFunction(onClickNavigator)) {
                    onClickNavigator.call(this, ...arguments, instance);
                }
            });

            // pag namili ng oras
            this.on('click', '.myc-available-time', function () {

                var date = $(this).data('date');
                var time = $(this).data('time');
                var treatmentID = $(this).data('treatmentid');
                var userID = $(this).data('userid');
                var duration = $(this).data('duration');
                var tmp = date + ' ' + time;
                alert(treatmentID + " " + userID + " " + duration);
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                    var idx = settings.selectedDates.indexOf(tmp);
                    if (idx !== -1) {
                        settings.selectedDates.splice(idx, 1);
                    }
                } else {
                    if (settings.isMultiple) {
                        $(this).addClass('selected');
                        settings.selectedDates.push(tmp);
                    } else {
                        settings.selectedDates.pop();
                        if (!settings.selectedDates.length) {
                            $('.myc-available-time').removeClass('selected');
                            $(this).addClass('selected');
                            settings.selectedDates.push(tmp);
                        }
                    }
                }
                if ($.isFunction(onClick)) {
                    onClick.call(this, ...arguments, settings.selectedDates);
                }
                setApoiment(treatmentID, userID, date, time, duration);
            });

            var render = function () {
                ret = `
                    <div id="myc-container">
                        <div id="myc-nav-container">` + instance.getNavControl() + `</div>
                        <div id="myc-week-container">
                            <div id="myc-dates-container">` + instance.getDatesHeader() + `</div>
                            <div id="myc-available-time-container">` + instance.getAvailableTimes() + `</div>
                        </div>
                    </div>
                `;
                instance.html(ret);
            };

            render();
        };
    })(jQuery);
</script>
<script type="text/javascript">
    (function($) {
      $('#picker').markyourcalendar({
        availability:
        [
    @Html.Raw(aviability)
        ],
        startDate: new Date(Date.now()),
        onClick: function(ev, data) {

          // data is a list of datetimes
          var d = data[0].split(' ')[0];

          var t = data[0].split(' ')[1];
          $('#selected-date').html(d);
          $('#selected-time').html(t);
        },
        onClickNavigator: function(ev, instance) {

          var arr = [
            [
              ['4:00', '5:00', '6:00', '7:00', '8:00'],
              ['1:00', '5:00'],
              ['2:00', '5:00'],
              ['3:30'],
              ['2:00', '5:00'],
              ['2:00', '5:00'],
              ['2:00', '5:00']
            ],
            [
              ['2:00', '5:00'],
              ['4:00', '5:00', '6:00', '7:00', '8:00'],
              ['4:00', '5:00'],
              ['2:00', '5:00'],
              ['2:00', '5:00'],
              ['2:00', '5:00'],
              ['2:00', '5:00']
            ],
            [
              ['4:00', '5:00'],
              ['4:00', '5:00'],
              ['4:00', '5:00', '6:00', '7:00', '8:00'],
              ['3:00', '6:00'],
              ['3:00', '6:00'],
              ['3:00', '6:00'],
              ['3:00', '6:00']
            ],
            [
              ['4:00', '5:00'],
              ['4:00', '5:00'],
              ['4:00', '5:00'],
              ['4:00', '5:00', '6:00', '7:00', '8:00'],
              ['4:00', '5:00'],
              ['4:00', '5:00'],
              ['4:00', '5:00']
            ],
            [
              ['4:00', '6:00'],
              ['4:00', '6:00'],
              ['4:00', '6:00'],
              ['4:00', '6:00'],
              ['4:00', '5:00', '6:00', '7:00', '8:00'],
              ['4:00', '6:00'],
              ['4:00', '6:00']
            ],
            [
              ['3:00', '6:00'],
              ['3:00', '6:00'],
              ['3:00', '6:00'],
              ['3:00', '6:00'],
              ['3:00', '6:00'],
              ['4:00', '5:00', '6:00', '7:00', '8:00'],
              ['3:00', '6:00']
            ],
            [
              ['3:00', '4:00'],
              ['3:00', '4:00'],
              ['3:00', '4:00'],
              ['3:00', '4:00'],
              ['3:00', '4:00'],
              ['3:00', '4:00'],
              ['4:00', '5:00', '6:00', '7:00', '8:00']
            ]
          ]
          var rn = Math.floor(Math.random() * 10) % 7;
          instance.setAvailability(arr[rn]);
        }
      });
    })(jQuery);
</script>
